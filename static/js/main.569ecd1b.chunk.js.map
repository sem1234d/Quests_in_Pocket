{"version":3,"sources":["img/Design-story.png","panels/Achievment.js","panels/Profile.js","panels/Modal.js","panels/InfoWindowEx.js","panels/MapContainer.js","panels/End.js","panels/Poll.js","panels/Begin.js","panels/Questions.js","panels/Rr.js","App.js","index.js","img/achiev-1.png","img/map.png"],"names":["module","exports","Achievment","props","before","style","src","achiev_1","size","indicator","this","lvlNum","title","React","Component","StyleName","fontSize","fontWeight","Profile","state","fetchedUser","id","align","photo_200","first_name","last_name","VKStories","init","connect","InfoWindowEx","infoWindowRef","createRef","contentElement","document","createElement","prevProps","children","ReactDOM","render","Children","only","current","infowindow","setContent","ref","width","height","MapContainer","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","submit","console","log","position","lat","checkGeo","onMapClicked","google","zoom","initialCenter","geoData","lng","long","gestureHandling","streetViewControl","mapTypeControl","zoomControl","onClick","updateGeodata","level","map","name","i","id_marker","img","img_1","pretext","text","text_end","pollQuestions","answer_1","answer_2","answer_3","but","icon","url","MyIcon","anchor","maps","Point","scaledSize","Size","visible","errorGeo","nameButton","GoogleApiWrapper","apiKey","End","theEnd","pollAnswers","Poll","pollQuestion","handleVote","voteAnswer","newPollAnswers","answer","option","votes","question","answers","onVote","Begin","axios","require","Questions","activeTab","get","then","res","theme","selected","blueBackground","backgroundColor","api","VKMiniAppAPI","App","onClickMap","data","popout","getGeodata","dataGeo","setTimeout","activeStory","a","p1","toFixed","num","m1","p2","m2","snackbar","layout","onClose","fill","activePanelMap","closePopout","onStoryChange","currentTarget","dataset","story","onToChange","activePanel","to","header","ball","access_token","showEnd","initApp","getUserInfo","userInfo","post","actions","autoclose","tabbar","data-story","competionQuest","send","getElementById"],"mappings":"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","file":"static/js/main.569ecd1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Design-story.2ea10a94.png\";","import React from 'react';\r\nimport {InfoRow, Cell, Separator, Div, Avatar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport achiev_1 from '../img/achiev-1.png';\r\n\r\n\r\n//компонент достижения\r\nclass Achievment extends React.Component {\r\n\tconstructor(props) {\r\n      super(props);\r\n\t}\r\n  render() {\r\n  \treturn(\r\n       <Cell before={<div style={{\"margin-left\": \"1px\"}}><Avatar src={achiev_1} size={100}/></div>} indicator={this.props.lvlNum + ' lvl'}>\r\n          <InfoRow>\r\n          {this.props.title}\r\n          </InfoRow>\r\n       </Cell>\r\n       \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Achievment;","import React from 'react';\r\nimport {  View, ScreenSpinner, Panel, Epic, Button, PanelHeader, Panar, Avatar, Div, HeaderButton, Cell, Snackbar, Gallery, Group, List, InfoRow, Separator} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Achievment from './Achievment';\r\n\r\nconst StyleName = {\r\n  fontSize : '150%',\r\n  fontWeight : 'bold'\r\n}\r\n\r\n// Компонент профиля\r\nclass Profile extends React.Component {\r\n\tconstructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n          fetchedUser : this.props.fetchedUser\r\n     }\r\n  }\r\n\r\n\t  render() {\r\n\t\t        return(\r\n                <Div id=\"profile-container\" align=\"center\">\r\n                  <Div id=\"avatar-container\">\r\n                     <Avatar src={this.state.fetchedUser.photo_200} style={{\"border\":\"solid 3px #BF24FE\"}} size={150}/>\r\n                  </Div>\r\n\r\n                  <Div id=\"name-container\">\r\n                    <Cell id=\"name\"><p style={StyleName}><strong>{this.state.fetchedUser.first_name+\" \"+this.state.fetchedUser.last_name}</strong></p></Cell>\r\n                  </Div>\r\n\r\n                 \r\n               \r\n                  <Group title=\"Ваши достижения\" id=\"achievements-container\">\r\n                     <Achievment lvlNum=\"1\" title=\"Первопроходец\" />\r\n                     \r\n                  </Group>\r\n               </Div>\r\n\t\t        );           \r\n\t  }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {Panel, Div, Button, Cell, Avatar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport VKStories from \"vk-stories\";\r\nimport connect from \"@vkontakte/vkui-connect-promise\";\r\nVKStories.init(connect);\r\n\r\n\r\n\r\n\r\n//компонент модального окна\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n  }\r\n\r\n    ReturnMap = () => {\r\n      this.props.theStory();\r\n    }\r\n\r\n  GenerateStory = () => {\r\n      VKStories.generateStoryFromTemplate(require(\"../img/Design-story.png\"), [\r\n      {\r\n        font: \"45px Arial\",\r\n        align: \"center\",\r\n        color: \"#FFFFFF\",\r\n        value: \"Я был здесь: \" + this.props.selectedPlace.name + \". А ты?\",\r\n        x: 540,\r\n        y: 1133,\r\n        }\r\n     ])\r\n     .then( (story) => {\r\n        VKStories.shareStory(7150376, story, { add_to_news: true })\r\n        this.ReturnMap();\r\n    })\r\n}\r\n     \r\n\r\n   \r\n\r\n  render() {\r\n    return(\r\n      <Div align=\"center\">\r\n       <Avatar src={this.props.fetchedUser.photo_200} size={150} />\r\n       <Cell id=\"name\">{this.props.fetchedUser.first_name+\" \"+this.props.fetchedUser.last_name}</Cell>\r\n      <Div align=\"center\">\r\n      <Button level=\"commerce\" size=\"xl\" onClick={this.GenerateStory}>Опубликовать</Button>\r\n      <Button style={{\"marginTop\":\"1.5%\"}} level=\"destructive\" size=\"xl\" onClick={this.ReturnMap}>Отмена</Button>\r\n      </Div>\r\n\r\n      </Div>\r\n   );\r\n  }\r\n\r\n}\r\n\r\nexport default Modal;","import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class InfoWindowEx extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.infoWindowRef = React.createRef();\r\n    this.contentElement = document.createElement(`div`);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.children !== prevProps.children) {\r\n      ReactDOM.render(\r\n        React.Children.only(this.props.children),\r\n        this.contentElement\r\n      );\r\n      this.infoWindowRef.current.infowindow.setContent(this.contentElement);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <InfoWindow ref={this.infoWindowRef} {...this.props} />;\r\n  }\r\n}","//immport lib\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport { Div, Button } from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport InfoWindowEx from './InfoWindowEx'\r\nimport connect from '@vkontakte/vkui-connect';\r\n\r\n//import icon\r\nimport Icon24Replay from '@vkontakte/icons/dist/36/replay';\r\nimport MyIcon from '../img/map.png'\r\n\r\n    const style = {\r\n      width: '100%',\r\n      height: '100%',\r\n      'marginLeft': 'auto',\r\n      'marginRight': 'auto'\r\n    }\r\n\r\n\r\nexport class MapContainer extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  const errorGeo = this.props.geoData;\r\n   this.state = {\r\n    nameButton: \"Я на месте\",\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n\r\n  };\r\n }\r\n  onMarkerClick = (props, marker, e) =>{\r\nthis.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true});\r\n}\r\n   submit = (e) => {\r\n    console.log(this.state.selectedPlace);\r\n    console.log(this.state.selectedPlace.position.lat);\r\n  this.props.checkGeo(this.state.selectedPlace);\r\n\r\n\r\n   }\r\n\r\n\r\n\r\n  onMapClicked = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      })\r\n    }\r\n  };\r\n\r\n\r\n  render=(e)=> {\r\n\r\n    return (\r\n      <Map google={this.props.google}\r\n      style={style}\r\n      zoom={16}\r\n       initialCenter={{\r\n            lat: this.props.geoData.lat,\r\n            lng: this.props.geoData.long\r\n        }}\r\n\t\tgestureHandling={'greedy'}\r\n    streetViewControl={false}\r\n    mapTypeControl={false}\r\n    zoomControl={false}\r\n          onClick={this.onMapClicked}>\r\n\r\n<div>\r\n    <Button size=\"xl\" onClick={this.props.updateGeodata} level=\"commerce\">\r\n      <p align=\"center\">Обновить</p>\r\n\r\n    </Button>\r\n </div>\r\n             {this.props.marker.map((name,i) =>\r\n               <Marker onClick={this.onMarkerClick}\r\n                       id_marker={name.id_marker}\r\n                       position={{ lat: name.lat, lng: name.lng }}\r\n                       name={name.name}\r\n                       img={name.img}\r\n                       img_1={name.img_1}\r\n                       pretext={name.pretext}\r\n                       text={name.text}\r\n                       text_end={name.text_end}\r\n                       pollQuestions={name.pollQuestions}\r\n                       answer_1={name.answer_1}\r\n                       answer_2={name.answer_2}\r\n                       answer_3={name.answer_3}\r\n                       but={<Button level=\"commerce\" onClick={this.submit}>Я на месте</Button>}  />)\r\n             }\r\n\r\n\r\n\r\n              <Marker onClick={this.onMarkerClick}\r\n                position={{ lat: this.props.geoData.lat , lng:  this.props.geoData.long }}\r\n                id_marker={\"I\"}\r\n                icon={{\r\n                  url:MyIcon,\r\n                  anchor: new this.props.google.maps.Point(32,32),\r\n                  scaledSize: new this.props.google.maps.Size(32,51)\r\n                     }}\r\n                name={'Это вы'} />\r\n\r\n\r\n        <InfoWindowEx\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}>\r\n            <Div align=\"center\">\r\n            <img src={this.state.selectedPlace.img} style={{\"width\":\"90%\",\"height\":\"90%\"}}/>\r\n            <h1>{this.state.selectedPlace.name}</h1>\r\n              <p>{this.state.selectedPlace.pretext}</p>\r\n              {this.props.errorGeo}\r\n               {this.state.selectedPlace.but}\r\n              </Div>\r\n\r\n        </InfoWindowEx>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyCL0U2diIKJtBb5gmgyUsRvpSIIKIfKCv0')\r\n})(MapContainer)\r\n","import React from 'react';\r\nimport { Button, Div} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nclass End extends React.Component {\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n               <Div align=\"center\">\r\n            {this.props.selectedPlace.text_end}\r\n            <Button size=\"xl\" level=\"commerce\" onClick={this.props.theEnd}>Завершить</Button>\r\n              </Div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default End;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport { View, ScreenSpinner, Epic, PanelHeader, Panel, Tabbar, TabbarItem, Avatar, Div, HeaderButton, List, Cell, Snackbar, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Polls from 'react-polls';\r\n\r\nconst StyleButton = {\r\n  outline: \"none\",\r\n  width:\"100%\",\r\n  color: \"white\",\r\n  fontFamily:\"Arial\",\r\n  padding: \"20px 30px\",\r\n  borderRadius: \"10px\",\r\n  backgroundImage: \"linear-gradient(to right, #9EEFE1 0%, #4830F0 51%, #9EEFE1 100%)\",\r\n  backgroundSize: \"200%\",\r\n  boxShadow:\" 0 0 20px rgba(0,0,0,.1)\",\r\n  transition: \".5s\",\r\n  marginTop: \"1.5%\"\r\n}\r\n\r\nconst pollAnswers = this.props.Poll;\r\nconst pollQuestion = this.props.selectedPlace.pollQuestions;\r\nclass Poll extends React.Component {\r\n\r\nconstructor(props){\r\nsuper(props);\r\n\r\nthis.state = {\r\n  pollAnswers:[...pollAnswers]\r\n}\r\n}\r\n  // Handling user vote\r\n  // Increments the votes count of answer when the user votes\r\n  handleVote = voteAnswer => {\r\n     const { pollAnswers } = this.state\r\n     const newPollAnswers = pollAnswers.map(answer => {\r\n       if (answer.option === voteAnswer) answer.votes++\r\n       return answer\r\n     })\r\n     this.setState({\r\n       pollAnswers: newPollAnswers\r\n     })\r\n   }\r\n\r\n\r\n\r\n  render(){\r\n\r\n\r\n   return(\r\n    <div>\r\n       <Polls question={pollQuestion} answers={this.pollAnswers} onVote={this.handleVote} />\r\n     </div>\r\n\r\n\t \t);\r\n\t}\r\n}\r\n\r\nexport default Poll;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport { View, ScreenSpinner, Epic, PanelHeader, Panel, Tabbar, TabbarItem, Avatar, Div, HeaderButton, List, Cell, Snackbar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nclass Begin extends React.Component{\r\n\t\r\nrender(){\r\n\treturn(\r\n <Div align=\"center\"> \r\n<Avatar src={this.props.selectedPlace.img_1} size={200}/>\r\n{this.props.selectedPlace.text}\r\n</Div>\r\n\t);}\r\n\r\n}\r\nexport default Begin;","import React from 'react';\r\nimport {  PanelHeader,  Avatar, Div, HeaderButton, List, Cell, Snackbar, Group, InfoRow, Progress, Tabs, TabsItem} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nvar axios = require('axios');\r\n\r\n\r\n\r\nclass Questions extends React.Component {\r\nconstructor(props){\r\nsuper(props)\r\n\r\nthis.state ={\r\nactiveTab:'questions'\r\n\r\n}\r\n}\r\n  connect(){\r\n axios.get(\"http://localhost/index.php?type=get_all\")\r\n   .then(res => {\r\n\r\n      console.log(res)\r\n      });\r\n}\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Div>\r\n\t\t\t     <Tabs theme=\"light\">\r\n                <TabsItem\r\n                 onClick={() => this.setState({ activeTab: 'questions' })}\r\n                  selected={this.state.activeTab === 'questions'}\r\n                >\r\n                  Задания\r\n                </TabsItem>\r\n                <TabsItem\r\n                     onClick={() => this.setState({ activeTab: 'rr' })}\r\n                  selected={this.state.activeTab === 'rr'}\r\n\r\n                >\r\n                  Рейтинг\r\n                </TabsItem>\r\n          </Tabs>\r\n\r\n          {this.state.activeTab === \"questions\" ? <Div><p>KLLLLLLLLLLLL</p><button onClick={this.connect}>bg</button></Div>:null}\r\n\r\n\r\n\r\n              </Div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default Questions;\r\n","import {  View, ScreenSpinner, Epic, Button,PanelHeader, Panel, Tabbar, TabbarItem, Avatar,Alert, Div, HeaderButton, Cell, Snackbar, Gallery, Group} from '@vkontakte/vkui';\r\nimport React from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass Rr extends React.Component{\r\n\r\n\trender(){\r\n      return(\r\n        <div></div>\r\n\r\n      )\r\n\t}\r\n}\r\nexport default Rr;","\r\nimport React from 'react';\r\nimport { VKMiniAppAPI } from '@vkontakte/vk-mini-apps-api';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport {  View, ScreenSpinner, Epic, Button,PanelHeader, Panel, Tabbar, TabbarItem, Avatar,Alert, Div, HeaderButton, Cell, Snackbar, Gallery, Group, Tabs, TabsItem} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Profile from './panels/Profile';\r\nimport Modal from './panels/Modal';\r\nimport Achievment from './panels/Achievment';\r\nimport MapContainer from './panels/MapContainer';\r\nimport End from './panels/End'\r\nimport Poll from './panels/Poll';\r\nimport Begin from './panels/Begin'\r\nimport Questions from './panels/Questions';\r\nimport Rr from './panels/Rr';\r\n\r\nimport Icon28MoreHorizontal from '@vkontakte/icons/dist/28/more_horizontal';\r\nimport Icon28Place from '@vkontakte/icons/dist/28/place';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\n\r\nvar axios = require('axios');\r\n\r\n\r\nconst orangeBackground = {\r\n  backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n  backgroundColor: 'var(--accent)'\r\n};\r\n const api = new VKMiniAppAPI();\r\n\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.num = 0;\r\n\r\n    this.state = {\r\n      activeStory: 'other',\r\n      activePanelMap: \"map\",\r\n      activeTab:'questions',\r\n      header: true,\r\n      snackbar:null,\r\n      popout: null,\r\n      selectedPlace:null,\r\n      fetchedUser: null,\r\n      ball:0,\r\n      access_token: null,\r\n      geoData: null,\r\n      marker:null,\r\n      errorGeo:null,\r\n      Poll:null,\r\n      showEnd:false\r\n\r\n\r\n    };\r\n  }\r\n    componentDidMount(e){\r\n    api.initApp();\r\n    this.setState({popout:<ScreenSpinner />});\r\n    api.getUserInfo().then(userInfo => {\r\n    this.setState({fetchedUser:userInfo});\r\n    axios.post(\"https://www.questsinpocket.com/vk/index.php?type=create&id_vk=\"+userInfo.id+\"&ball=0\").then(data=>{\r\n      console.log(data.data);\r\n      if(data.data === 2){\r\n        axios.post(\"https://www.questsinpocket.com/vk/index.php?type=get&id_vk=\"+userInfo.id).then(data=>{\r\n          this.setState({ball:data.data, popout:null});\r\n        })\r\n      }else{\r\n          this.setState({popout:null});\r\n      }\r\n    })\r\n    console.log(userInfo.id);\r\n    })\r\n\r\n\r\n    }\r\n\r\n    onClickMap=(e)=>{\r\n      axios.get(\"https://www.questsinpocket.com/vk/index.php?type=get_all_points\")\r\n      .then(data=>{\r\n\r\n        this.setState({marker:data.data})});\r\n      this.setState({popout:<ScreenSpinner />})\r\n      api.getGeodata().then(dataGeo=>{\r\n        this.setState({geoData: dataGeo})\r\n        setTimeout(()=>{this.setState({ activeStory:'map', popout:null})},500);\r\n        console.log(dataGeo);\r\n      });\r\n\r\n    }\r\n\r\n    updateGeodata=(e)=>{\r\n      api.getGeodata().then(dataGeo=>{\r\n      this.setState({geoData: dataGeo});\r\n      console.log(dataGeo);\r\n      })\r\n    }\r\n\r\n    getPoll(e){\r\n      axios.get(\"https://www.questsinpocket.com/vk/index.php?type=get&vk_id=0&id=\"+this.state.selectedPlace.id_marker).then(data=>{\r\n        this.setState({Poll: data.data});\r\n      })\r\n\r\n    }\r\n\r\n    checkGeo=(a, e)=>{\r\n\r\n      this.setState({popout: <ScreenSpinner /> });\r\n      api.getGeodata().then(dataGeo=>{this.setState({geoData:dataGeo})});\r\n      const p1 = (this.state.geoData.lat).toFixed(this.num);\r\n      const m1 = (+a.position.lat).toFixed(this.num);\r\n      const p2 = (this.state.geoData.long).toFixed(this.num);\r\n      const m2 = (+a.position.lng).toFixed(this.num);\r\n      if(p1 === m1 && p2 === m2) {\r\n\r\n        axios.get(\"https://www.questsinpocket.com/vk/index.php?type=get_poll&id_marker\"+a.id_marker).then(data=>{\r\n          if(data.data === \"\"){\r\n            this.setState({snackbar:\r\n             <Snackbar\r\n               layout=\"vertical\"\r\n               onClose={() => this.setState({ snackbar: null })}\r\n               before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n             >\r\n               Получено достижение\r\n             </Snackbar>, Poll:[{option:\"да\",votes:0},{option:\"нет\",votes:0},{option:\"мозможно\", votes:0}]});\r\n          }\r\n        });\r\n        this.setState({activePanelMap:'quest', selectedPlace:a, popout:null});\r\n        console.log(3);\r\n     /*this.setState({snackbar:\r\n      <Snackbar\r\n        layout=\"vertical\"\r\n        onClose={() => this.setState({ snackbar: null })}\r\n        before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\r\n      >\r\n        Получено достижение\r\n      </Snackbar>});*/\r\n    }\r\n    else{\r\n        this.setState({errorGeo:<p style={{\"color\":\"red\"}}>Попробуйте еще раз</p> , popout:null});\r\n       }\r\n     }\r\n\r\n     competionQuest(){\r\n\r\n\r\n     }\r\n\r\n\r\n    openDefault (e) {\r\n    this.setState({ popout:\r\n      <Alert\r\n        actions={[{\r\n          title: 'Отмена',\r\n          autoclose: true,\r\n          style: 'cancel'\r\n        }, {\r\n          title: 'Ок',\r\n          autoclose: true,\r\n        }]}\r\n        onClose={this.closePopout}\r\n      >\r\n\r\n        <p>Для стабильной работы включите геолокацию</p>\r\n      </Alert>\r\n    });\r\n  }\r\n\r\n  closePopout=(e)=> {this.setState({ popout: null})}\r\n\r\n  onStoryChange =(e)=> {\r\n    this.setState({ activeStory: e.currentTarget.dataset.story });\r\n  }\r\n\r\n  onToChange =(e)=> {\r\n     this.setState({ activePanel: e.currentTarget.dataset.to});\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Epic activeStory={this.state.activeStory} tabbar={\r\n        <Tabbar>\r\n          <TabbarItem\r\n            onClick={this.onStoryChange}\r\n            selected={this.state.activeStory === 'profile'}\r\n            data-story=\"profile\"\r\n          ><Icon28User /></TabbarItem>\r\n          <TabbarItem\r\n            onClick={this.onClickMap}\r\n            selected={this.state.activeStory === 'map'}\r\n            data-story=\"map\"\r\n\r\n          ><Icon28Place/></TabbarItem>\r\n          <TabbarItem\r\n            onClick={this.onStoryChange}\r\n            selected={this.state.activeStory === 'other'}\r\n            data-story=\"other\"\r\n          ><Icon28MoreHorizontal /></TabbarItem>\r\n        </Tabbar>}>\r\n\r\n      <View id={'profile'} popout={this.state.popout} activePanel={'profile'}>\r\n        <Panel id={\"profile\"}>\r\n          <Profile fetchedUser={this.state.fetchedUser} />\r\n        </Panel>\r\n      </View>\r\n\r\n      <View id={'map'} popout={this.state.popout} activePanel={this.state.activePanelMap}>\r\n        <Panel id={'map'}>\r\n          <MapContainer geoData={this.state.geoData} updateGeodata={this.updateGeodata} errorGeo={this.state.errorGeo} checkGeo={this.checkGeo} marker={this.state.marker}/>\r\n        </Panel>\r\n        <Panel id={'quest'}>\r\n          <Begin selectedPlace={this.state.selectedPlace} />\r\n          <Poll selectedPlace={this.state.selectedPlace} Poll={this.state.Poll} />\r\n          <End selectedPlace={this.state.selectedPlace} theEnd={this.competionQuest} />\r\n          {this.state.snackbar}\r\n        </Panel>\r\n      </View>\r\n\r\n      <View id={'other'} header={false} popout={this.state.popout} activePanel={'other'}>\r\n        <Panel id={'other'}>\r\n          <Questions />\r\n        </Panel>\r\n\r\n      </View>\r\n      </Epic>)\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './App';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/achiev-1.05917b64.png\";","module.exports = __webpack_public_path__ + \"static/media/map.e0ba97a3.png\";"],"sourceRoot":""}